package Formularios;
import Classes.*;
import java.util.Date;
import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;


public class TelaRegistroHorarios extends javax.swing.JFrame {

    public TelaRegistroHorarios() {
        initComponents();
        setLocationRelativeTo(this);
        
        carregarComboBoxFuncionarios();
        obterDataAtual();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxFuncionarios = new javax.swing.JComboBox();
        jBRegistrarHor = new javax.swing.JButton();
        jFtxtData = new javax.swing.JFormattedTextField();
        jFtxtEntrada = new javax.swing.JFormattedTextField();
        jFtxtSaidaInt = new javax.swing.JFormattedTextField();
        jFtxtRetornoInt = new javax.swing.JFormattedTextField();
        jFtxtSaida = new javax.swing.JFormattedTextField();
        jBLimpar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu = new javax.swing.JMenu();
        jMenuItem = new javax.swing.JMenuItem();
        jFuncionario = new javax.swing.JMenu();
        jMenuCadastrarFun = new javax.swing.JMenuItem();
        jHorario = new javax.swing.JMenu();
        jMenuRegistroHor = new javax.swing.JMenuItem();
        jRelatorio = new javax.swing.JMenu();
        jMenuRelatorio = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Horários");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(201, 226, 201));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icon_horarios.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel2.setText("Registro de Horários");

        jLabel3.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel3.setText("Funcionário:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel4.setText("Data:");

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel5.setText("Horário de Entrada:");

        jLabel6.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel6.setText("Horário de saída para intervalo:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel7.setText("Horário de retorno do intervalo:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel8.setText("Horário de saída final:");

        jComboBoxFuncionarios.setBackground(new java.awt.Color(238, 242, 238));
        jComboBoxFuncionarios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFuncionariosActionPerformed(evt);
            }
        });

        jBRegistrarHor.setBackground(new java.awt.Color(42, 115, 42));
        jBRegistrarHor.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        jBRegistrarHor.setForeground(new java.awt.Color(255, 255, 255));
        jBRegistrarHor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/adicionar.png"))); // NOI18N
        jBRegistrarHor.setText("Registrar");
        jBRegistrarHor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBRegistrarHorActionPerformed(evt);
            }
        });

        jFtxtData.setBackground(new java.awt.Color(238, 242, 238));
        try {
            jFtxtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFtxtData.setEnabled(false);

        jFtxtEntrada.setBackground(new java.awt.Color(238, 242, 238));
        try {
            jFtxtEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jFtxtSaidaInt.setBackground(new java.awt.Color(238, 242, 238));
        try {
            jFtxtSaidaInt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jFtxtRetornoInt.setBackground(new java.awt.Color(238, 242, 238));
        try {
            jFtxtRetornoInt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jFtxtSaida.setBackground(new java.awt.Color(238, 242, 238));
        try {
            jFtxtSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jBLimpar.setBackground(new java.awt.Color(36, 36, 159));
        jBLimpar.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        jBLimpar.setForeground(new java.awt.Color(255, 255, 255));
        jBLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/limpar.png"))); // NOI18N
        jBLimpar.setText("Limpar");
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxFuncionarios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFtxtData, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFtxtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFtxtRetornoInt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jFtxtEntrada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jBRegistrarHor, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jFtxtSaidaInt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFtxtData, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFtxtEntrada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jFtxtSaidaInt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jFtxtRetornoInt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jFtxtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBRegistrarHor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jMenu.setText("Menu");
        jMenu.setToolTipText("");
        jMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuActionPerformed(evt);
            }
        });

        jMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem.setText("Acessar Menu");
        jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemActionPerformed(evt);
            }
        });
        jMenu.add(jMenuItem);

        jMenuBar1.add(jMenu);

        jFuncionario.setText("Funcionário");

        jMenuCadastrarFun.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        jMenuCadastrarFun.setText("Cadastrar Funcionário");
        jMenuCadastrarFun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCadastrarFunActionPerformed(evt);
            }
        });
        jFuncionario.add(jMenuCadastrarFun);

        jMenuBar1.add(jFuncionario);

        jHorario.setText("Horário");

        jMenuRegistroHor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.ALT_MASK));
        jMenuRegistroHor.setText("Registrar Horário");
        jMenuRegistroHor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRegistroHorActionPerformed(evt);
            }
        });
        jHorario.add(jMenuRegistroHor);

        jMenuBar1.add(jHorario);

        jRelatorio.setText("Relatório");

        jMenuRelatorio.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK));
        jMenuRelatorio.setText("Gerar Relatório");
        jMenuRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRelatorioActionPerformed(evt);
            }
        });
        jRelatorio.add(jMenuRelatorio);

        jMenuBar1.add(jRelatorio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuActionPerformed
        
    }//GEN-LAST:event_jMenuActionPerformed

    private void jMenuCadastrarFunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCadastrarFunActionPerformed
        this.setVisible(false);
        new TelaCadastroFuncionario().setVisible(true);
    }//GEN-LAST:event_jMenuCadastrarFunActionPerformed

    private void jMenuRegistroHorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRegistroHorActionPerformed
        this.setVisible(false);
        new TelaRegistroHorarios().setVisible(true);
    }//GEN-LAST:event_jMenuRegistroHorActionPerformed

    private void jMenuRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRelatorioActionPerformed
        this.setVisible(false);
        new TelaRelatorio().setVisible(true);
    }//GEN-LAST:event_jMenuRelatorioActionPerformed

    private void jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemActionPerformed
        this.setVisible(false);
        new TelaInicial().setVisible(true);
    }//GEN-LAST:event_jMenuItemActionPerformed

    private void jComboBoxFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFuncionariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxFuncionariosActionPerformed

    private void jBRegistrarHorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBRegistrarHorActionPerformed
        registrarHorario();
    }//GEN-LAST:event_jBRegistrarHorActionPerformed

    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        limparDados();
    }//GEN-LAST:event_jBLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRegistroHorarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRegistroHorarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBLimpar;
    private javax.swing.JButton jBRegistrarHor;
    private javax.swing.JComboBox jComboBoxFuncionarios;
    private javax.swing.JFormattedTextField jFtxtData;
    private javax.swing.JFormattedTextField jFtxtEntrada;
    private javax.swing.JFormattedTextField jFtxtRetornoInt;
    private javax.swing.JFormattedTextField jFtxtSaida;
    private javax.swing.JFormattedTextField jFtxtSaidaInt;
    private javax.swing.JMenu jFuncionario;
    private javax.swing.JMenu jHorario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCadastrarFun;
    private javax.swing.JMenuItem jMenuItem;
    private javax.swing.JMenuItem jMenuRegistroHor;
    private javax.swing.JMenuItem jMenuRelatorio;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenu jRelatorio;
    // End of variables declaration//GEN-END:variables
    
    public void registrarHorario(){
        try{
            String nomeFuncionario = (String) jComboBoxFuncionarios.getSelectedItem();
            String entradaS = jFtxtEntrada.getText();
            String saidaIS = jFtxtSaidaInt.getText();
            String retornoIS = jFtxtRetornoInt.getText();
            String saidaS = jFtxtSaida.getText();
            
            if (nomeFuncionario == null || jFtxtData.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Questão02", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (validarHoras(entradaS) || validarHoras(saidaIS) || validarHoras(retornoIS) || validarHoras(saidaS)) {
                JOptionPane.showMessageDialog(this, "Horários inválidos!\nVerifique as horas inseridas e tente novamente.", "Questão 02", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            Date data = RegistroHoras.sdfData.parse(jFtxtData.getText());
            Date entrada = RegistroHoras.sdf.parse(jFtxtEntrada.getText());
            Date saidaInt = RegistroHoras.sdf.parse(jFtxtSaidaInt.getText());
            Date retornoInt = RegistroHoras.sdf.parse(jFtxtRetornoInt.getText());
            Date saida = RegistroHoras.sdf.parse(jFtxtSaida.getText());
            
            if (!saida.after(entrada)) {
                JOptionPane.showMessageDialog(null, "A hora de saída final deve ser maior que a hora de entrada!\nVerifique as horas inseridas e tente novamente", 
                        "Questão 02", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (saidaInt.after(retornoInt)) {
                JOptionPane.showMessageDialog(null, 
                    "A hora de saída para o intervalo deve ser anterior ao retorno do intervalo!\nVerifique as horas inseridas e tente novamente", 
                    "Questão 02", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (saidaInt.before(entrada) || retornoInt.after(saida)) {
                JOptionPane.showMessageDialog(null, "O intervalo deve ocorrer dentro do horário de trabalho!\nVerifique as horas inseridas e tente novamente", "Questão 02", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            Funcionario funcionario = ControleHorarios.buscarFuncionario(nomeFuncionario);
            
            ControleHorarios.registrarHorarios(funcionario, data, entrada, saidaInt, retornoInt,saida);
            limparDados();

        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Dados inválidos!","Questão 02", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void limparDados(){
        jComboBoxFuncionarios.setSelectedIndex(-1);
        jFtxtEntrada.setText("");
        jFtxtSaidaInt.setText("");
        jFtxtRetornoInt.setText("");
        jFtxtSaida.setText("");
    } 
    
    public boolean validarHoras(String hora){
        if (hora == null || hora.trim().isEmpty()) {
            return false;
        }
        
        String[] partes = hora.split(":");
        
        int horas = Integer.parseInt(partes[0]);
        int minutos = Integer.parseInt(partes[1]);
        
        return horas < 0 || horas > 23 || minutos < 0 || minutos > 59;
    }
    
    private void carregarComboBoxFuncionarios() {
        jComboBoxFuncionarios.removeAllItems();

        for(Funcionario f : ControleHorarios.exibirFuncionarios()) {
            jComboBoxFuncionarios.addItem(f.getNome());
        }
    }
    
    public void obterDataAtual(){
        LocalDate dataAtual = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String dataFormatada = dataAtual.format(formatter);
        jFtxtData.setText(dataFormatada);
    }
}
